# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
    id-token: write   # This is required for requesting the JWT
    contents: read    # This is required for actions/checkout

jobs:
  service-registry:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file service-registry/pom.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        role-to-assume: arn:aws:iam::544357677864:role/github-action
        aws-region: eu-north-1


    - name: Get commit hash
      id: get-commit-hash
      run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

    - name: Get timestamp
      id: get-timestamp
      run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"


    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public

    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: my-ecr-public-registry-alias
        REPOSITORY: deigitallending
        IMAGE_TAG:  ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
      run: |
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
        
  # api-gateway-service:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up JDK 21
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '21'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file api-gateway-service/pom.xml

          
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3
      
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
      
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_TOKEN }}

  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: api-gateway-service/ 
  #       push: true
  #       tags: hemanshu16/apigatewayservice:latest

  # bre-service:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up JDK 21
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '21'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file bre-service/pom.xml

          
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3
      
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
      
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_TOKEN }}

  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: bre-service/ 
  #       push: true
  #       tags: hemanshu16/breservice:latest


  # loan-service:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up JDK 21
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '21'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file loan-service/pom.xml

          
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3
      
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
      
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_TOKEN }}

  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: loan-service/ 
  #       push: true
  #       tags: hemanshu16/loanservice:latest

  
  # user-service:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up JDK 21
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '21'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Build with Maven
  #     run: mvn -B package --file user-service/pom.xml

          
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3
      
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
      
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_TOKEN }}

  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: user-service/ 
  #       push: true
  #       tags: hemanshu16/userservice:latest
